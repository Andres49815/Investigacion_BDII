@model CountriesApp.Models.Country


@{
    ViewBag.Title = "AllCountries";
}

<html>
<head>
    <meta name="viewport" uiactions="expand" content="width=device-width" />
</head>
<body>
    <!-- Country data order: id name area population flag anthem president id -->
    <form name="frmCountries" id="frmCountries" method="post">
        <br />
        <div class="form-group row">
            <button type="button" onclick="location.href='@Url.Action("AllCountries", "Countries", new { countryIndex = 999, sum = 0 })'" class="btn btn-default"> First </button>
            <button type="button" onclick="location.href='@Url.Action("AllCountries", "Countries", new { countryIndex = ViewBag.CountryIndex, sum = -1 })'" class="btn btn-default"> Previous </button>
            <button type="button" onclick="location.href='@Url.Action("AllCountries", "Countries", new { countryIndex = ViewBag.CountryIndex, sum = +1 })'" class="btn btn-default"> Next </button>
            <button type="button" onclick="location.href='@Url.Action("AllCountries", "Countries", new { countryIndex = -1, sum = 0 })'" class="btn btn-default"> Last </button>
        </div>

        <div class="container">
            <div class="col-xs-5">
                <h1> @Model.name</h1>
            </div>
            <div class="col-xs-6">
                <h1>@Html.DisplayNameFor(model => model.anthem)</h1>
            </div>
        </div>

        <div class="container">
            <div class="row">
                <div class="col-xs-5">
                    @if (Model.flag == null)
                    {
                        using (Html.BeginForm("AddFlag", "Countries", new { countryIndex = ViewBag.CountryIndex }, FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {

                        }
                        using (Html.BeginForm("AddFlag", "Countries", new { countryIndex = ViewBag.CountryIndex }, FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            <fieldset>
                                <input type="file" name="test" />
                                <input type="submit" value="AddFlag" />
                            </fieldset>
                        }
                    }
                    else
                    {
                        var base64 = Convert.ToBase64String(Model.flag);
                        var imgsrc = string.Format("data:audio/mp3;base64,{0}", base64);
                        <div class="col-md-6 col-xs-6">
                            <img src="@imgsrc" class="img-responsive" height="100" width="200" />
                        </div>
                    }
                </div>
                <div class="col-xs-6">
                    <div class="row">
                        @if (Model.anthem == null)
                        {
                            using (Html.BeginForm("AddAnthem", "Countries", new { countryIndex = ViewBag.ActualIndex }, FormMethod.Post, new { enctype = "multipart/form-data" }))
                            {

                            }
                            using (Html.BeginForm("AddAnthem", "Countries", new { countryIndex = ViewBag.ActualIndex }, FormMethod.Post, new { enctype = "multipart/form-data" }))
                            {
                                <fieldset>
                                    <input type="file" name="test" />
                                    <input type="submit" value="AddAnthem" />
                                </fieldset>
                            }
                        }
                        else
                        {
                            var base64 = Convert.ToBase64String(Model.anthem);
                            var soundsrc = string.Format("data:audio/mpeg;base64,{0}", base64);
                            <audio controls="" autoplay="" name="media" id="player">
                                <source src="@soundsrc" type="audio/mpeg">
                            </audio>
                        }
                    </div>
                    <div class="row">
                        <div class="container">
                            <div class="col-xs-2">
                                <h3> @Html.DisplayNameFor(model => model.population)    <b style="color:forestgreen"> @Html.DisplayFor(model => model.population)</b></h3>
                                <h3> @Html.DisplayNameFor(model => model.area)    <b style="color:forestgreen"> @Html.DisplayFor(model => model.area)</b></h3>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <br />
        <!-- President Information -->
        <h2>President</h2>
        <div class="text-center">
            @{
                try
                {
                    string forException = Model.Person.firstName;
                    <label for="presidentName" class="col-sm-2 col-form-label">Presidente:</label>
                    <input type="text" class="form-control" id="pName" value="@Model.Person.firstName @Model.Person.lastName" placeholder="@Model.name" disabled />
                    <label for="presidentBirthdate" class="col-sm-2 col-form-label">Fecha de Nacimiento:</label>
                    <input type="text" class="form-control" id="pBirthdate" value="@Model.Person.birthdate" placeholder="@Model.Person.birthdate" disabled />
                }
                catch (NullReferenceException)
                {
                    <label style="color:red">Sin presidente asignado</label>
                }
            }
        </div>
        <!-- Population Info -->
        <!-- People data order: id idNumber firstName lastName birthCountry residenceCountry birthdate email photo interview -->

        <h2>People</h2>
        <button type="button" id="btFirst" class="btn btn-default"> Primeros </button>
        <button type="button" id="btAnteriores" class="btn btn-default"> Anteriores </button>
        <button type="button" id="btSiguientes" class="btn btn-default"> Siguientes </button>
        <button type="button" id="btLast" class="btn btn-default"> Ultimos </button>
        <table id="refresh" class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Person.firstName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Person.lastName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Person.birthdate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Person.Country)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Person.email)
                </th>
            </tr>
            @{

                foreach (CountriesApp.Models.Person person in Model.People1) // (int i = start; i < end && i < Model.People1.Count; i++)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => person.firstName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => person.lastName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => person.birthdate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => person.Country.name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => person.email)
                        </td>
                    </tr>
                }
            }

        </table>
        @section scripts{
            <script>
                $("#btSiguientes").click(function ()
                {
                    var dataURL = "@Url.Action("Data", "Countries")";
                    $.ajax({
                        type: "POST",
                        url: dataURL,
                        data: {CountryIndex: "@ViewBag.CountryIndex", sum: "+1"},
                        success: function (data)
                        {
                            $("#refresh").html(data);
                        },
                        error: function errorFunc()
                        {
                            alert('error');
                        }
                    })
                })
            </script>
            <script>
                $("#btAnteriores").click(function ()
                {
                    var dataURL = "@Url.Action("Data", "Countries")";
                    $.ajax({
                        type: "POST",
                        url: dataURL,
                        data: {CountryIndex: "@ViewBag.CountryIndex", sum: "-1"},
                        success: function (data)
                        {
                            $("#refresh").html(data);
                        },
                        error: function errorFunc()
                        {
                            alert('error');
                        }
                    })
                })
            </script>
        }

        @using (Html.BeginForm("AddPerson", "Countries", new { countryIndex = ViewBag.ActualIndex }, FormMethod.Post, new { enctype = "multipart/form=data" }))
        {
            CountriesApp.Models.Person person;

            person = new CountriesApp.Models.Person();
            <fieldset>
                <legend>Register People</legend>

                @{
                    SelectList list = ViewBag.birthCountry;
                }

                @Html.LabelFor(p => person.firstName)
                @Html.EditorFor(p => person.firstName)
                @Html.LabelFor(p => person.lastName)
                @Html.EditorFor(p => person.lastName)
                @Html.LabelFor(p => person.birthdate)
                @Html.EditorFor(p => person.birthdate)
                @Html.LabelFor(p => person.birthCountry)
                @Html.DropDownListFor(p => person.birthCountry, list)
                <p>
                    <input type="submit" value="Add person" />
                </p>
            </fieldset>
        }
        @using (Html.BeginForm("SendCommit", "Countries", FormMethod.Post, new { enctype = "multipart/form=data" }))
        {
            <p>
                <input type="submit" value="Commit" />
            </p>
        }
        @using (Html.BeginForm("Rollback", "Countries", FormMethod.Post, new { enctype = "multipart/form=data" }))
        {
            <P>
                <input type="submit" value="Rollback" />
            </P>
        }
        @Html.ActionLink("Consulta 1", "") |
        @Html.ActionLink("Consulta 2", "Query_2")
    </form>
</body>
</html>