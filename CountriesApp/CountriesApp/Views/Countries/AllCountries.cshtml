@model CountriesApp.Models.Country


@{
    ViewBag.Title = "AllCountries";
}

<html>
<head>
    <meta name="viewport" uiactions="expand" content="width=device-width" />
</head>
<body>
    <!-- Country data order: id name area population flag anthem president id -->
    <form name="frmCountries" id="frmCountries" method="post">
        <br />
        <div class="form-group row">
            <button type="button" onclick="location.href='@Url.Action("ChangeCountry", "Countries", new { actual = @ViewBag.ActualIndex, i = -1 })'" class="btn btn-default"> Anterior </button>
            <button type="button" onclick="location.href='@Url.Action("ChangeCountry", "Countries", new { actual = @ViewBag.ActualIndex, i = +1 })'" class="btn btn-default"> Siguiente </button>
        </div>

        <h2>@Model.name</h2>

        <!-- Flag and anthem -->
        @using (Html.BeginForm("AddFlag", "Countries", new { countryIndex = ViewBag.ActualIndex }, FormMethod.Post, new { enctype = "multipart/form-data" }))
        {

        }
        @using (Html.BeginForm("AddFlag", "Countries", new { countryIndex = ViewBag.ActualIndex }, FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            <fieldset>
                <input type="file" name="test" />
                <input type="submit" value="AddFlag" />
            </fieldset>
        }

        @try
        {
            var base64 = Convert.ToBase64String(Model.flag);
            var imgsrc = string.Format("data:image/png;base64,{0}", base64);

            <div class="col-md-6 col-xs-6">
                <img src="@imgsrc" class="img-responsive" height="100" width="200" />
            </div>
        }
        catch (ArgumentNullException)
        {

        }

        <br />
        <br />
        <!-- General Information -->
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.area)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.population)
                </th>
            </tr>
            <tr>
                <td>
                    @Html.DisplayFor(model => model.area)
                </td>
                <td>
                    @Html.DisplayFor(model => model.population)
                </td>
            </tr>
        </table>

        <!-- President Information -->
        <h2>President</h2>
        <div class="text-center">
            @{
                try
                {
                    string forException = Model.Person.firstName;

                    <label for="presidentName" class="col-sm-2 col-form-label">Presidente:</label>
                    <input type="text" class="form-control" id="pName" value="@Model.Person.firstName @Model.Person.lastName" placeholder="@Model.name" disabled />

                    <label for="presidentBirthdate" class="col-sm-2 col-form-label">Fecha de Nacimiento:</label>
                    <input type="text" class="form-control" id="pBirthdate" value="@Model.Person.birthdate" placeholder="@Model.Person.birthdate" disabled />
                }
                catch (NullReferenceException)
                {
                    <label style="color:red">Sin presidente asignado</label>
                }
            }
        </div>

        <!-- Population Info -->
        <!-- People data order: id idNumber firstName lastName birthCountry residenceCountry birthdate email photo interview -->
        <h2>People</h2>
        <button type="button" onclick="location.href='@Url.Action("TravelPopulation", "Countries", new { actualCountry = ViewBag.ActualIndex, actualPopulation = ViewBag.PopulationIndex, sum = -1 })'" class="btn btn-default"> Anteriores </button>
        <button type="button" onclick="location.href='@Url.Action("TravelPopulation", "Countries", new { actualCountry = ViewBag.ActualIndex, actualPopulation = ViewBag.PopulationIndex, sum = +1 })'" class="btn btn-default"> Siguientes </button>
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Person.firstName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Person.lastName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Person.birthdate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Person.Country)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Person.email)
                </th>
            </tr>

            @{
                int start, end;

                start = (ViewBag.PopulationIndex - 1) * 10;
                end = ViewBag.PopulationIndex * 10;

                for (int i = start; i < end && i < Model.People1.Count; i++)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => Model.People1.ToList()[i].firstName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => Model.People1.ToList()[i].lastName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => Model.People1.ToList()[i].birthdate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => Model.People1.ToList()[i].Country.name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => Model.People1.ToList()[i].email)
                        </td>
                    </tr>
                }
            }
        </table>

        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Person.firstName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Person.lastName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Person.Country)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Person.Country1)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Person.birthdate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Person.email)
                </th>
            </tr>

            @foreach (var item in Model.Temporal_People())
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.firstName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.lastName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Country.name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Country1.name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.birthdate)
                    </td>
                    <th>
                        @Html.DisplayFor(modelItem => item.email)
                    </th>
                </tr>
            }
        </table>

        <!-- Register new people -->
        <!-- h2>Register People</!--h2 -->
        @using (Html.BeginForm("AddPerson", "Countries", new { countryIndex = ViewBag.ActualIndex }, FormMethod.Post, new { enctype = "multipart/form=data" }))
        {
            CountriesApp.Models.Person person;

            person = new CountriesApp.Models.Person();
            <fieldset>
                <legend>Register People</legend>

                @Html.LabelFor(p => person.firstName)
                @Html.EditorFor(p => person.firstName)
                @Html.LabelFor(p => person.lastName)
                @Html.EditorFor(p => person.lastName)
                @Html.LabelFor(p => person.birthdate)
                @Html.EditorFor(p => person.birthdate)
                <p>
                    <input type="submit" value="Add person" />
                </p>
            </fieldset>
        }
        @*<div class="form-group row">
            <input type="text" class="form-control" id="newPersonName" name="newPersonName" />
            <input type="text" class="form-control" id="newPersonLastName" name="newPersonLastName" />
            <input type="date" class="form-control" id="newPersonBirthdate" name="newPersonBirthdate" />

            <input type="submit" value="Insertar" formaction="/Countries/ReadData?countryIndex=@ViewBag.ActualIndex" name="btn_InsertPerson" />
            <input type="submit" value="Borrar Temporales" formaction="/Countries/DeleteTemporalPeople" name="btn_DeleteTemporal" class="btn btn-default" />
            <input type="submit" value="Insertar Todos" formaction="/Countries/InsertTemporalPeople" name="btn_InsertTemporalPeople" class="btn btn-default" />
        </div>*@
    </form>
</body>
</html>