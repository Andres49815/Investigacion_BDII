@model CountriesApp.Models.Country

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <input type="submit" value="Aceptar" formaction="/Countries/Confirm_Edit_Country" name="Confirm_Edit" />

    <div class="form-horizontal">
        <h4>Country</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="form-group">
            @Html.LabelFor(model => model.flag, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{ var photo = Model.flag; }
                @if (photo != null)
                {
                    var base64 = Convert.ToBase64String(photo);
                    var imgsrc = string.Format("data:audio/mpeg;base64,{0}", base64);
                    <div class="col-md-6 col-xs-6">
                        <img src="@imgsrc" class="img-responsive" height="100" width="100" />
                    </div>
                }
                @using (Html.BeginForm("AddFlag", "Countries", new { countryIndex = Model.id }, FormMethod.Post, new { enctype = "multipart/form-data" }))
                {

                }
                @using (Html.BeginForm("AddFlag", "Countries", new { countryIndex = Model.id }, FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    <fieldset>
                        <input type="file" name="test" />
                        <input type="submit" value="AddPhoto" class="btn btn-sm" />
                    </fieldset>
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.anthem, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{ var interview = Model.anthem; }
                @if (interview != null)
                {
                    var base64 = Convert.ToBase64String(Model.anthem);
                    var soundsrc = string.Format("data:video/mp4;base64,{0}", base64);
                    <audio controls="" autoplay="" name="media" id="player">
                        <source src="@soundsrc" type="audio/mpeg">
                    </audio>
                }
                @using (Html.BeginForm("AddAnthem", "Countries", new { countryID = Model.id }, FormMethod.Post, new { enctype = "multipart/form-data" }))
                {

                }
                @using (Html.BeginForm("AddAnthem", "Countries", new { countryID = Model.id }, FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    <fieldset>
                        <input type="file" name="test" />
                        <input type="submit" value="Add interview" class="btn btn-sm" />
                    </fieldset>
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.area, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.area, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.area, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.population, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.population, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.population, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
